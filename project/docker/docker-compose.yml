version: '3.8'

services:
#  stocktrack-be:
#    image: stocktrack-be
#    ports:
#      - "8080:8090"
#    volumes:
#      - ./volumes/stocktrack-be/logback.xml:/home/logback.xml
#    networks:
#      - elk

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    ports:
      - "8484:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./volumes/keycloak:/opt/keycloak/data/import

  elasticsearch:
    container_name: elasticsearch
    image: arm64v8/elasticsearch:7.17.20
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data/
      - ./volumes/elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - elk

  logstash:
    container_name: logstash
    image: arm64v8/logstash:7.17.20
    ports:
      - "4560:4560"
      - "9600:9600"
    volumes:
      - ./volumes/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./volumes/elk/logstash.yml:/usr/share/logstash/config/logstash.yml
      - logstash_data:/usr/share/logstash/data
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: arm64v8/kibana:7.17.20
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./volumes/elk/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kibana_data:/usr/share/kibana/data
    networks:
      - elk
    depends_on:
      - elasticsearch

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"

  psql:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "user"
      POSTGRES_DB: "stocktrack-db"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"

  liquibase:
    image: liquibase/liquibase
    volumes:
      - ./volumes/liquibase:/liquibase/changelog
    depends_on:
      psql:
        condition: service_healthy
    command: [ "--defaults-file=/liquibase/changelog/liquibase.properties", "--search-path=/liquibase/changelog", "--url=jdbc:postgresql://psql:5432/stocktrack-db", "update" ]


networks:
  elk:
    driver: bridge

volumes:
  elasticsearch_data:
  logstash_data:
  kibana_data: